[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "context",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "sqlalchemy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "engine_from_config",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "pool",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Float",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "BigInteger",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "MetaData",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Table",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Numeric",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "fileConfig",
        "importPath": "logging.config",
        "description": "logging.config",
        "isExtraImport": true,
        "detail": "logging.config",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "database",
        "description": "database",
        "isExtraImport": true,
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "pytz",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytz",
        "description": "pytz",
        "detail": "pytz",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "Faker",
        "importPath": "faker",
        "description": "faker",
        "isExtraImport": true,
        "detail": "faker",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "Marker",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "OptionalInfo",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "Marker",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "MarkerHistory",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "Match",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "Message",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "OptionalInfo",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "MaybeMatch",
        "importPath": "w84u.models",
        "description": "w84u.models",
        "isExtraImport": true,
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "django.db.utils",
        "description": "django.db.utils",
        "isExtraImport": true,
        "detail": "django.db.utils",
        "documentation": {}
    },
    {
        "label": "Point",
        "importPath": "django.contrib.gis.geos",
        "description": "django.contrib.gis.geos",
        "isExtraImport": true,
        "detail": "django.contrib.gis.geos",
        "documentation": {}
    },
    {
        "label": "Point",
        "importPath": "django.contrib.gis.geos",
        "description": "django.contrib.gis.geos",
        "isExtraImport": true,
        "detail": "django.contrib.gis.geos",
        "documentation": {}
    },
    {
        "label": "GEOSGeometry",
        "importPath": "django.contrib.gis.geos",
        "description": "django.contrib.gis.geos",
        "isExtraImport": true,
        "detail": "django.contrib.gis.geos",
        "documentation": {}
    },
    {
        "label": "Point",
        "importPath": "django.contrib.gis.geos",
        "description": "django.contrib.gis.geos",
        "isExtraImport": true,
        "detail": "django.contrib.gis.geos",
        "documentation": {}
    },
    {
        "label": "GEOSGeometry",
        "importPath": "django.contrib.gis.geos",
        "description": "django.contrib.gis.geos",
        "isExtraImport": true,
        "detail": "django.contrib.gis.geos",
        "documentation": {}
    },
    {
        "label": "DateTimeTZRange",
        "importPath": "psycopg2.extras",
        "description": "psycopg2.extras",
        "isExtraImport": true,
        "detail": "psycopg2.extras",
        "documentation": {}
    },
    {
        "label": "DateTimeRange",
        "importPath": "psycopg2.extras",
        "description": "psycopg2.extras",
        "isExtraImport": true,
        "detail": "psycopg2.extras",
        "documentation": {}
    },
    {
        "label": "DateTimeRange",
        "importPath": "psycopg2.extras",
        "description": "psycopg2.extras",
        "isExtraImport": true,
        "detail": "psycopg2.extras",
        "documentation": {}
    },
    {
        "label": "DateTimeTZRange",
        "importPath": "psycopg2.extras",
        "description": "psycopg2.extras",
        "isExtraImport": true,
        "detail": "psycopg2.extras",
        "documentation": {}
    },
    {
        "label": "DateTimeRange",
        "importPath": "psycopg2.extras",
        "description": "psycopg2.extras",
        "isExtraImport": true,
        "detail": "psycopg2.extras",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "connection",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.contrib.postgres.fields.ranges",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.postgres.fields.ranges",
        "description": "django.contrib.postgres.fields.ranges",
        "detail": "django.contrib.postgres.fields.ranges",
        "documentation": {}
    },
    {
        "label": "django.contrib.gis.db.models.fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.gis.db.models.fields",
        "description": "django.contrib.gis.db.models.fields",
        "detail": "django.contrib.gis.db.models.fields",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "ModelForm",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "PasswordInput",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "EmailField",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ObjectDoesNotExist",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "DateTimeRangeField",
        "importPath": "django.contrib.postgres.fields",
        "description": "django.contrib.postgres.fields",
        "isExtraImport": true,
        "detail": "django.contrib.postgres.fields",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.contrib.gis.db",
        "description": "django.contrib.gis.db",
        "isExtraImport": true,
        "detail": "django.contrib.gis.db",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "parse_datetime",
        "importPath": "django.utils.dateparse",
        "description": "django.utils.dateparse",
        "isExtraImport": true,
        "detail": "django.utils.dateparse",
        "documentation": {}
    },
    {
        "label": "parse_datetime",
        "importPath": "django.utils.dateparse",
        "description": "django.utils.dateparse",
        "isExtraImport": true,
        "detail": "django.utils.dateparse",
        "documentation": {}
    },
    {
        "label": "parse_datetime",
        "importPath": "django.utils.dateparse",
        "description": "django.utils.dateparse",
        "isExtraImport": true,
        "detail": "django.utils.dateparse",
        "documentation": {}
    },
    {
        "label": "D",
        "importPath": "django.contrib.gis.measure",
        "description": "django.contrib.gis.measure",
        "isExtraImport": true,
        "detail": "django.contrib.gis.measure",
        "documentation": {}
    },
    {
        "label": "D",
        "importPath": "django.contrib.gis.measure",
        "description": "django.contrib.gis.measure",
        "isExtraImport": true,
        "detail": "django.contrib.gis.measure",
        "documentation": {}
    },
    {
        "label": "Distance",
        "importPath": "django.contrib.gis.db.models.functions",
        "description": "django.contrib.gis.db.models.functions",
        "isExtraImport": true,
        "detail": "django.contrib.gis.db.models.functions",
        "documentation": {}
    },
    {
        "label": "Distance",
        "importPath": "django.contrib.gis.db.models.functions",
        "description": "django.contrib.gis.db.models.functions",
        "isExtraImport": true,
        "detail": "django.contrib.gis.db.models.functions",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "parser",
        "importPath": "dateutil",
        "description": "dateutil",
        "isExtraImport": true,
        "detail": "dateutil",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenVerifyView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "UserRegistrationForm",
        "importPath": "w84u.forms",
        "description": "w84u.forms",
        "isExtraImport": true,
        "detail": "w84u.forms",
        "documentation": {}
    },
    {
        "label": "LoginForm",
        "importPath": "w84u.forms",
        "description": "w84u.forms",
        "isExtraImport": true,
        "detail": "w84u.forms",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "require_http_methods",
        "importPath": "django.views.decorators.http",
        "description": "django.views.decorators.http",
        "isExtraImport": true,
        "detail": "django.views.decorators.http",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAdminUser",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "TokenAuthentication",
        "importPath": "rest_framework.authentication",
        "description": "rest_framework.authentication",
        "isExtraImport": true,
        "detail": "rest_framework.authentication",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "MultiPartParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "FormParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "combine_date_time",
        "importPath": "w84u.timeCompare",
        "description": "w84u.timeCompare",
        "isExtraImport": true,
        "detail": "w84u.timeCompare",
        "documentation": {}
    },
    {
        "label": "create_datetime_range",
        "importPath": "w84u.timeCompare",
        "description": "w84u.timeCompare",
        "isExtraImport": true,
        "detail": "w84u.timeCompare",
        "documentation": {}
    },
    {
        "label": "DjangoFilterBackend",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "geodesic",
        "importPath": "geopy.distance",
        "description": "geopy.distance",
        "isExtraImport": true,
        "detail": "geopy.distance",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "xmlrpc.client",
        "description": "xmlrpc.client",
        "isExtraImport": true,
        "detail": "xmlrpc.client",
        "documentation": {}
    },
    {
        "label": "sessionmaker",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "declarative_base",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "sessionmaker",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "Mapped",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "pymongo",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pymongo",
        "description": "pymongo",
        "detail": "pymongo",
        "documentation": {}
    },
    {
        "label": "pymongo.mongo_client",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pymongo.mongo_client",
        "description": "pymongo.mongo_client",
        "detail": "pymongo.mongo_client",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "Waiting_for_u.asgi",
        "description": "Waiting_for_u.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "Waiting_for_u.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-(ldsu0+#5q_a+5x)s#znul8z9r_b*po5-#opl_j@-=cy5fjw2^'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-(ldsu0+#5q_a+5x)s#znul8z9r_b*po5-#opl_j@-=cy5fjw2^'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'w84u.apps.W84UConfig',",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'w84u.apps.W84UConfig',\n    'django_extensions',\n    'django_bootstrap5',",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n    \"http://127.0.0.1:3000\",\n]\nCORS_ALLOW_CREDENTIALS = True\nROOT_URLCONF = 'Waiting_for_u.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_CREDENTIALS",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "CORS_ALLOW_CREDENTIALS = True\nROOT_URLCONF = 'Waiting_for_u.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "ROOT_URLCONF = 'Waiting_for_u.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "WSGI_APPLICATION = 'Waiting_for_u.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.contrib.gis.db.backends.postgis',\n        'NAME': 'w4u',\n        'USER': 'postgres',\n        'PASSWORD': '12385279',\n        'HOST': '89.23.97.213',",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.contrib.gis.db.backends.postgis',\n        'NAME': 'w4u',\n        'USER': 'postgres',\n        'PASSWORD': '12385279',\n        'HOST': '89.23.97.213',\n        'PORT': '5432',\n    }\n}",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'w84u.CustomUser'\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_RENDERER_CLASSES': [",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_RENDERER_CLASSES': [\n        'rest_framework.renderers.JSONRenderer' ,",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_RENDERER_CLASSES': [\n        'rest_framework.renderers.JSONRenderer' ,\n        'rest_framework.renderers.BrowsableAPIRenderer' ,\n    ],\n    'DEFAULT_PERMISSION_CLASSES': [",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_RENDERER_CLASSES': [\n        'rest_framework.renderers.JSONRenderer' ,\n        'rest_framework.renderers.BrowsableAPIRenderer' ,\n    ],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny',\n    ],\n    'DEFAULT_AUTHENTICATION_CLASSES': [",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_RENDERER_CLASSES': [\n        'rest_framework.renderers.JSONRenderer' ,\n        'rest_framework.renderers.BrowsableAPIRenderer' ,\n    ],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny',\n    ],\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rest_framework.authentication.TokenAuthentication',",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=5),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=1),\n    \"ROTATE_REFRESH_TOKENS\": False,\n    \"BLACKLIST_AFTER_ROTATION\": False,\n    \"UPDATE_LAST_LOGIN\": False,\n    \"ALGORITHM\": \"HS256\",\n    \"SIGNING_KEY\": SECRET_KEY,\n    \"VERIFYING_KEY\": \"\",\n    \"AUDIENCE\": None,",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')\n# GDAL_LIBRARY_PATH = os.getenv('GDAL_LIBRARY_PATH', '/usr/local/lib/libgdal.so')",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "Waiting_for_u.settings",
        "description": "Waiting_for_u.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')\n# GDAL_LIBRARY_PATH = os.getenv('GDAL_LIBRARY_PATH', '/usr/local/lib/libgdal.so')",
        "detail": "Waiting_for_u.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "Waiting_for_u.urls",
        "description": "Waiting_for_u.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('w84u.urls')),\n]",
        "detail": "Waiting_for_u.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "Waiting_for_u.wsgi",
        "description": "Waiting_for_u.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "Waiting_for_u.wsgi",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.7236b81fd969_init",
        "description": "migrations.versions.7236b81fd969_init",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.7236b81fd969_init",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.7236b81fd969_init",
        "description": "migrations.versions.7236b81fd969_init",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.7236b81fd969_init",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.dd3864701751_init",
        "description": "migrations.versions.dd3864701751_init",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('marker',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('user', sa.Integer(), nullable=True),\n    sa.Column('latitude', sa.Float(), nullable=True),\n    sa.Column('longitude', sa.Float(), nullable=True),\n    sa.Column('type', sa.Enum('red', 'blue', name='type'), nullable=True),\n    sa.Column('created_at', sa.DateTime(), nullable=True),\n    sa.ForeignKeyConstraint(['user'], ['users.id'], name=op.f('fk_marker_user_users')),",
        "detail": "migrations.versions.dd3864701751_init",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.dd3864701751_init",
        "description": "migrations.versions.dd3864701751_init",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_table('messsage')\n    op.drop_table('markerhistory')\n    op.drop_table('match')\n    op.drop_table('marker')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.dd3864701751_init",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.e48bdac774f0_init",
        "description": "migrations.versions.e48bdac774f0_init",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('users',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('username', sa.String(), nullable=True),\n    sa.Column('email', sa.String(), nullable=True),\n    sa.Column('real_name', sa.String(), nullable=True),\n    sa.Column('age', sa.Integer(), nullable=True),\n    sa.Column('gender', sa.Enum('men', 'women', name='gender'), nullable=True),\n    sa.Column('created_at', sa.DateTime(), nullable=True),",
        "detail": "migrations.versions.e48bdac774f0_init",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.e48bdac774f0_init",
        "description": "migrations.versions.e48bdac774f0_init",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_table('users')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.e48bdac774f0_init",
        "documentation": {}
    },
    {
        "label": "run_migrations_offline",
        "kind": 2,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "def run_migrations_offline() -> None:\n    \"\"\"Run migrations in 'offline' mode.\n    This configures the context with just a URL\n    and not an Engine, though an Engine is acceptable\n    here as well.  By skipping the Engine creation\n    we don't even need a DBAPI to be available.\n    Calls to context.execute() here emit the given string to the\n    script output.\n    \"\"\"\n    url = config.get_main_option(\"sqlalchemy.url\")",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "run_migrations_online",
        "kind": 2,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "def run_migrations_online() -> None:\n    \"\"\"Run migrations in 'online' mode.\n    In this scenario we need to create an Engine\n    and associate a connection with the context.\n    \"\"\"\n    connectable = engine_from_config(\n        config.get_section(config.config_ini_section, {}),\n        prefix=\"sqlalchemy.\",\n        poolclass=pool.NullPool,\n    )",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 5,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "config = context.config\n# Interpret the config file for Python logging.\n# This line sets up loggers basically.\nif config.config_file_name is not None:\n    fileConfig(config.config_file_name)\n# add your model's MetaData object here\n# for 'autogenerate' support\n# from myapp import mymodel\n# target_metadata = mymodel.Base.metadata\ntarget_metadata = Base.metadata",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "target_metadata",
        "kind": 5,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "target_metadata = Base.metadata\n# other values from the config, defined by the needs of env.py,\n# can be acquired:\n# my_important_option = config.get_main_option(\"my_important_option\")\n# ... etc.\ndef run_migrations_offline() -> None:\n    \"\"\"Run migrations in 'offline' mode.\n    This configures the context with just a URL\n    and not an Engine, though an Engine is acceptable\n    here as well.  By skipping the Engine creation",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "w84u.management.commands.generate_fake_data",
        "description": "w84u.management.commands.generate_fake_data",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'Generate fake data for CustomUser, Marker, and Session'\n    def handle(self, *args, **kwargs):\n        # Очистка таблиц перед созданием новых данных\n        # CustomUser.objects.all().delete()\n        # Marker.objects.all().delete()\n        # Session.objects.all().delete()\n        # OptionalInfo.objects.all().delete()\n        usernames = set()\n        emails = set()",
        "detail": "w84u.management.commands.generate_fake_data",
        "documentation": {}
    },
    {
        "label": "fake",
        "kind": 5,
        "importPath": "w84u.management.commands.generate_fake_data",
        "description": "w84u.management.commands.generate_fake_data",
        "peekOfCode": "fake = Faker()\nclass Command(BaseCommand):\n    help = 'Generate fake data for CustomUser, Marker, and Session'\n    def handle(self, *args, **kwargs):\n        # Очистка таблиц перед созданием новых данных\n        # CustomUser.objects.all().delete()\n        # Marker.objects.all().delete()\n        # Session.objects.all().delete()\n        # OptionalInfo.objects.all().delete()\n        usernames = set()",
        "detail": "w84u.management.commands.generate_fake_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0001_initial",
        "description": "w84u.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomUser',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "w84u.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0002_location",
        "description": "w84u.migrations.0002_location",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Location',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "w84u.migrations.0002_location",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0003_marker_markerhistory_match_message_delete_location_and_more",
        "description": "w84u.migrations.0003_marker_markerhistory_match_message_delete_location_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0002_location'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Marker',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),",
        "detail": "w84u.migrations.0003_marker_markerhistory_match_message_delete_location_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0004_alter_customuser_age",
        "description": "w84u.migrations.0004_alter_customuser_age",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0003_marker_markerhistory_match_message_delete_location_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customuser',\n            name='age',\n            field=models.PositiveIntegerField(default=18),\n        ),",
        "detail": "w84u.migrations.0004_alter_customuser_age",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0005_alter_customuser_gender",
        "description": "w84u.migrations.0005_alter_customuser_gender",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0004_alter_customuser_age'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customuser',\n            name='gender',\n            field=models.CharField(max_length=5),\n        ),",
        "detail": "w84u.migrations.0005_alter_customuser_gender",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0006_alter_customuser_age",
        "description": "w84u.migrations.0006_alter_customuser_age",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0005_alter_customuser_gender'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customuser',\n            name='age',\n            field=models.PositiveIntegerField(blank=True, null=True),\n        ),",
        "detail": "w84u.migrations.0006_alter_customuser_age",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0007_alter_customuser_options_alter_customuser_managers_and_more",
        "description": "w84u.migrations.0007_alter_customuser_options_alter_customuser_managers_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0006_alter_customuser_age'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='customuser',\n            options={},\n        ),\n        migrations.AlterModelManagers(",
        "detail": "w84u.migrations.0007_alter_customuser_options_alter_customuser_managers_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0008_session",
        "description": "w84u.migrations.0008_session",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0007_alter_customuser_options_alter_customuser_managers_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Session',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('created_at', models.DateTimeField(auto_now_add=True)),",
        "detail": "w84u.migrations.0008_session",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0009_session_data_session_data_range_begin_and_more",
        "description": "w84u.migrations.0009_session_data_session_data_range_begin_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0008_session'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='session',\n            name='data',\n            field=models.DateTimeField(blank=True, null=True),\n        ),",
        "detail": "w84u.migrations.0009_session_data_session_data_range_begin_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0010_rename_data_session_date_and_more",
        "description": "w84u.migrations.0010_rename_data_session_date_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0009_session_data_session_data_range_begin_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='session',\n            old_name='data',\n            new_name='date',\n        ),",
        "detail": "w84u.migrations.0010_rename_data_session_date_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0011_alter_session_date_range_begin",
        "description": "w84u.migrations.0011_alter_session_date_range_begin",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0010_rename_data_session_date_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='session',\n            name='date_range_begin',\n            field=models.DateTimeField(blank=True, null=True),\n        ),",
        "detail": "w84u.migrations.0011_alter_session_date_range_begin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0012_alter_session_name",
        "description": "w84u.migrations.0012_alter_session_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0011_alter_session_date_range_begin'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='session',\n            name='name',\n            field=models.CharField(blank=True, max_length=100, null=True),\n        ),",
        "detail": "w84u.migrations.0012_alter_session_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0013_optionalinfo_customuser_more_info",
        "description": "w84u.migrations.0013_optionalinfo_customuser_more_info",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0012_alter_session_name'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='OptionalInfo',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('image', models.ImageField(blank=True, null=True, upload_to='OptionalInfo_images/')),",
        "detail": "w84u.migrations.0013_optionalinfo_customuser_more_info",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0014_alter_customuser_more_info_alter_optionalinfo_user",
        "description": "w84u.migrations.0014_alter_customuser_more_info_alter_optionalinfo_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0013_optionalinfo_customuser_more_info'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customuser',\n            name='more_info',\n            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='w84u.optionalinfo'),\n        ),",
        "detail": "w84u.migrations.0014_alter_customuser_more_info_alter_optionalinfo_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0015_optionalinfo_surname",
        "description": "w84u.migrations.0015_optionalinfo_surname",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0014_alter_customuser_more_info_alter_optionalinfo_user'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='optionalinfo',\n            name='surname',\n            field=models.CharField(blank=True, max_length=100, null=True),\n        ),",
        "detail": "w84u.migrations.0015_optionalinfo_surname",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0016_session_is_active",
        "description": "w84u.migrations.0016_session_is_active",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0015_optionalinfo_surname'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='session',\n            name='is_active',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "w84u.migrations.0016_session_is_active",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0017_alter_session_is_active",
        "description": "w84u.migrations.0017_alter_session_is_active",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0016_session_is_active'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='session',\n            name='is_active',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "w84u.migrations.0017_alter_session_is_active",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0018_alter_session_time_alter_session_time_range_begin_and_more",
        "description": "w84u.migrations.0018_alter_session_time_alter_session_time_range_begin_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0017_alter_session_is_active'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='session',\n            name='time',\n            field=models.TimeField(blank=True, null=True),\n        ),",
        "detail": "w84u.migrations.0018_alter_session_time_alter_session_time_range_begin_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0019_remove_session_date_range_begin_and_more",
        "description": "w84u.migrations.0019_remove_session_date_range_begin_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0018_alter_session_time_alter_session_time_range_begin_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='session',\n            name='date_range_begin',\n        ),\n        migrations.RemoveField(",
        "detail": "w84u.migrations.0019_remove_session_date_range_begin_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0020_alter_marker_unique_together_marker_location_and_more",
        "description": "w84u.migrations.0020_alter_marker_unique_together_marker_location_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0019_remove_session_date_range_begin_and_more'),\n    ]\n    operations = [\n        migrations.AlterUniqueTogether(\n            name='marker',\n            unique_together={('user', 'type')},\n        ),\n        migrations.AddField(",
        "detail": "w84u.migrations.0020_alter_marker_unique_together_marker_location_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0021_alter_marker_unique_together",
        "description": "w84u.migrations.0021_alter_marker_unique_together",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0020_alter_marker_unique_together_marker_location_and_more'),\n    ]\n    operations = [\n        migrations.AlterUniqueTogether(\n            name='marker',\n            unique_together=set(),\n        ),\n    ]",
        "detail": "w84u.migrations.0021_alter_marker_unique_together",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0022_match_session_1_match_session_2_alter_match_user_1_and_more",
        "description": "w84u.migrations.0022_match_session_1_match_session_2_alter_match_user_1_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0021_alter_marker_unique_together'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='match',\n            name='session_1',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_session1', to='w84u.session'),\n        ),",
        "detail": "w84u.migrations.0022_match_session_1_match_session_2_alter_match_user_1_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0023_alter_maybematch_user_1",
        "description": "w84u.migrations.0023_alter_maybematch_user_1",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0022_match_session_1_match_session_2_alter_match_user_1_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='maybematch',\n            name='user_1',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maybe_matсhes_as_user_1', to=settings.AUTH_USER_MODEL),\n        ),",
        "detail": "w84u.migrations.0023_alter_maybematch_user_1",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "w84u.migrations.0024_alter_match_unique_together",
        "description": "w84u.migrations.0024_alter_match_unique_together",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('w84u', '0023_alter_maybematch_user_1'),\n    ]\n    operations = [\n        migrations.AlterUniqueTogether(\n            name='match',\n            unique_together={('user_1', 'session_1', 'user_2', 'session_2')},\n        ),\n    ]",
        "detail": "w84u.migrations.0024_alter_match_unique_together",
        "documentation": {}
    },
    {
        "label": "create_maybematch",
        "kind": 2,
        "importPath": "w84u.Comparator",
        "description": "w84u.Comparator",
        "peekOfCode": "def create_maybematch(user_1,session_1,user_2, session_2):\n    match = MaybeMatch.objects.create(\n       user_1=user_1,\n       session_1=session_1,\n        user_2=user_2,\n        session_2=session_2\n    )",
        "detail": "w84u.Comparator",
        "documentation": {}
    },
    {
        "label": "W84UConfig",
        "kind": 6,
        "importPath": "w84u.apps",
        "description": "w84u.apps",
        "peekOfCode": "class W84UConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'w84u'",
        "detail": "w84u.apps",
        "documentation": {}
    },
    {
        "label": "comparator",
        "kind": 5,
        "importPath": "w84u.chain",
        "description": "w84u.chain",
        "peekOfCode": "comparator = Comparator()\nlast_session = comparator.get_last_session(7)\nif isinstance(last_session, Session):\n    # Работайте с объектом Session\n    print(\"Last session:\", last_session)\nelse:\n    # Сообщение об ошибке\n    print(last_session)",
        "detail": "w84u.chain",
        "documentation": {}
    },
    {
        "label": "last_session",
        "kind": 5,
        "importPath": "w84u.chain",
        "description": "w84u.chain",
        "peekOfCode": "last_session = comparator.get_last_session(7)\nif isinstance(last_session, Session):\n    # Работайте с объектом Session\n    print(\"Last session:\", last_session)\nelse:\n    # Сообщение об ошибке\n    print(last_session)",
        "detail": "w84u.chain",
        "documentation": {}
    },
    {
        "label": "UserRegistrationForm",
        "kind": 6,
        "importPath": "w84u.forms",
        "description": "w84u.forms",
        "peekOfCode": "class UserRegistrationForm(ModelForm):\n    email = EmailField(label='Email', max_length=100, help_text='')\n    password = CharField(label='Пароль', widget=PasswordInput, help_text='')\n    password2 = CharField(label='Повторите пароль', widget=PasswordInput, help_text='')\n    class Meta:\n        model = CustomUser\n        fields = ('username', 'email', 'real_name', 'age', 'gender')\n    def clean_email(self):\n        email = self.cleaned_data['email']\n        if CustomUser.objects.filter(email=email).exists():",
        "detail": "w84u.forms",
        "documentation": {}
    },
    {
        "label": "LoginForm",
        "kind": 6,
        "importPath": "w84u.forms",
        "description": "w84u.forms",
        "peekOfCode": "class LoginForm(Form):\n    email = EmailField()\n    password = CharField(widget=PasswordInput)",
        "detail": "w84u.forms",
        "documentation": {}
    },
    {
        "label": "CustomUserManager",
        "kind": 6,
        "importPath": "w84u.models",
        "description": "w84u.models",
        "peekOfCode": "class CustomUserManager(BaseUserManager):\n    def create_user(self, email, password=None, **extra_fields):\n        if not email:\n            raise ValueError('The Email field must be set')\n        email = self.normalize_email(email)\n        user = self.model(email=email, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)\n        OptionalInfo.objects.create(user=user)\n        return user",
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "w84u.models",
        "description": "w84u.models",
        "peekOfCode": "class CustomUser(AbstractBaseUser):\n    email = models.EmailField(unique=True)\n    username = models.CharField(max_length=30, unique=True)\n    real_name = models.CharField(max_length=100)\n    age = models.IntegerField(null=True, blank=True)\n    gender = models.CharField(max_length=10, choices=(('men', 'Men'), ('women', 'Women')))\n    created_at = models.DateTimeField(default=timezone.now)\n    is_active = models.BooleanField(default=True)\n    is_staff = models.BooleanField(default=False)\n    is_superuser = models.BooleanField(default=False)",
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "OptionalInfo",
        "kind": 6,
        "importPath": "w84u.models",
        "description": "w84u.models",
        "peekOfCode": "class OptionalInfo(models.Model):\n    user = models.OneToOneField(CustomUser, on_delete=models.CASCADE)\n    image = models.ImageField(upload_to='OptionalInfo_images/', null=True, blank=True)\n    surname = models.CharField(max_length=100, null=True, blank=True)\n    about = models.CharField(max_length=500, null=True, blank=True)\n    country = models.CharField(max_length=100, null=True, blank=True)\n    town = models.CharField(max_length=100, null=True, blank=True)\n    study = models.CharField(max_length=100, null=True, blank=True)\n    work = models.CharField(max_length=100, null=True, blank=True)\nclass Marker(models.Model):",
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "Marker",
        "kind": 6,
        "importPath": "w84u.models",
        "description": "w84u.models",
        "peekOfCode": "class Marker(models.Model):\n    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE)\n    location = gis_models.PointField()\n    type = models.CharField(max_length=10, choices=(('red', 'Red'), ('blue', 'Blue')))\n    created_at = models.DateTimeField(default=timezone.now)\n    # class Meta:\n    #     unique_together = ('user', 'type')\nclass MarkerHistory(models.Model):\n    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE)\n    marker = models.ForeignKey(Marker, on_delete=models.CASCADE)",
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "MarkerHistory",
        "kind": 6,
        "importPath": "w84u.models",
        "description": "w84u.models",
        "peekOfCode": "class MarkerHistory(models.Model):\n    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE)\n    marker = models.ForeignKey(Marker, on_delete=models.CASCADE)\n    match = models.ForeignKey('Match', on_delete=models.CASCADE, default=1)\n    latitude = models.FloatField()\n    longitude = models.FloatField()\n    requested_at = models.DateTimeField(default=timezone.now)\nclass Match(models.Model):\n    user_1 = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name='matches_as_user1')\n    session_1 = models.ForeignKey('Session', on_delete=models.CASCADE, related_name='matches_as_session1', null=True)",
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "Match",
        "kind": 6,
        "importPath": "w84u.models",
        "description": "w84u.models",
        "peekOfCode": "class Match(models.Model):\n    user_1 = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name='matches_as_user1')\n    session_1 = models.ForeignKey('Session', on_delete=models.CASCADE, related_name='matches_as_session1', null=True)\n    user_2 = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name='matches_as_user2')\n    session_2 = models.ForeignKey('Session', on_delete=models.CASCADE, related_name='matches_as_session2', null=True)\n    created_at = models.DateTimeField(default=timezone.now)\n    class Meta:\n        unique_together = ('user_1', 'session_1', 'user_2', 'session_2')\nclass Message(models.Model):\n    match = models.ForeignKey(Match, on_delete=models.CASCADE)",
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "Message",
        "kind": 6,
        "importPath": "w84u.models",
        "description": "w84u.models",
        "peekOfCode": "class Message(models.Model):\n    match = models.ForeignKey(Match, on_delete=models.CASCADE)\n    sender = models.ForeignKey(CustomUser, on_delete=models.CASCADE)\n    content = models.TextField()\n    timestamp = models.DateTimeField(default=timezone.now)\n    read = models.BooleanField(default=False)\nclass MaybeMatch(models.Model):\n    user_1 = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name='maybe_matсhes_as_user_1')#тот , кого ищет пользователь\n    session_1 = models.ForeignKey('Session', on_delete=models.CASCADE, related_name='maybe_matches_as_session1')#сессия пользователя , в которой ищут первого юзера\n    id_confirmed_by_user1 = models.BooleanField(default=False)",
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "MaybeMatch",
        "kind": 6,
        "importPath": "w84u.models",
        "description": "w84u.models",
        "peekOfCode": "class MaybeMatch(models.Model):\n    user_1 = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name='maybe_matсhes_as_user_1')#тот , кого ищет пользователь\n    session_1 = models.ForeignKey('Session', on_delete=models.CASCADE, related_name='maybe_matches_as_session1')#сессия пользователя , в которой ищут первого юзера\n    id_confirmed_by_user1 = models.BooleanField(default=False)\n    user_2 = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name='maybe_matches_as_user2')#пользователь\n    session_2 = models.ForeignKey('Session', on_delete=models.CASCADE, related_name='maybe_matches_as_session2')\n    id_confirmed_by_user2 = models.BooleanField(default=False)\n    def is_fully_confirmed(self):\n        return self.is_confirmed_by_user1 and self.is_confirmed_by_user2\nclass Session(models.Model):",
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "Session",
        "kind": 6,
        "importPath": "w84u.models",
        "description": "w84u.models",
        "peekOfCode": "class Session(models.Model):\n    user = models.ForeignKey(get_user_model(), on_delete=models.CASCADE)\n    red_marker = models.OneToOneField(Marker, related_name='red_marker_session', on_delete=models.CASCADE, null=True,\n                                      blank=True)\n    blue_marker = models.OneToOneField(Marker, related_name='blue_marker_session', on_delete=models.CASCADE, null=True,\n                                       blank=True)\n    name = models.CharField(max_length=100, null=True, blank=True)\n    gender = models.CharField(max_length=10, choices=(('men', 'Men'), ('women', 'Women')))\n    date = models.DateTimeField(null=True, blank=True)\n    datetime_range = DateTimeRangeField(null=True, blank=True)",
        "detail": "w84u.models",
        "documentation": {}
    },
    {
        "label": "CustomUserSerializer",
        "kind": 6,
        "importPath": "w84u.serializers",
        "description": "w84u.serializers",
        "peekOfCode": "class CustomUserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CustomUser\n        fields = '__all__'\nclass OptionalInfoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = OptionalInfo\n        fields = '__all__'\nclass MarkerSerializer(serializers.ModelSerializer):\n    location = serializers.SerializerMethodField()",
        "detail": "w84u.serializers",
        "documentation": {}
    },
    {
        "label": "OptionalInfoSerializer",
        "kind": 6,
        "importPath": "w84u.serializers",
        "description": "w84u.serializers",
        "peekOfCode": "class OptionalInfoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = OptionalInfo\n        fields = '__all__'\nclass MarkerSerializer(serializers.ModelSerializer):\n    location = serializers.SerializerMethodField()\n    class Meta:\n        model = Marker\n        fields = ['id', 'user', 'location', 'type', 'created_at']\n    def get_location(self, obj):",
        "detail": "w84u.serializers",
        "documentation": {}
    },
    {
        "label": "MarkerSerializer",
        "kind": 6,
        "importPath": "w84u.serializers",
        "description": "w84u.serializers",
        "peekOfCode": "class MarkerSerializer(serializers.ModelSerializer):\n    location = serializers.SerializerMethodField()\n    class Meta:\n        model = Marker\n        fields = ['id', 'user', 'location', 'type', 'created_at']\n    def get_location(self, obj):\n        if obj.location:\n            return {\n                'lat': obj.location.y,\n                'lng': obj.location.x",
        "detail": "w84u.serializers",
        "documentation": {}
    },
    {
        "label": "MarkerHistorySerializer",
        "kind": 6,
        "importPath": "w84u.serializers",
        "description": "w84u.serializers",
        "peekOfCode": "class MarkerHistorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = MarkerHistory\n        fields = '__all__'\nclass MessageSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Message\n        fields = '__all__'\nclass SessionSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "w84u.serializers",
        "documentation": {}
    },
    {
        "label": "MessageSerializer",
        "kind": 6,
        "importPath": "w84u.serializers",
        "description": "w84u.serializers",
        "peekOfCode": "class MessageSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Message\n        fields = '__all__'\nclass SessionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Session\n        fields = '__all__'\nclass MaybeMatchSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "w84u.serializers",
        "documentation": {}
    },
    {
        "label": "SessionSerializer",
        "kind": 6,
        "importPath": "w84u.serializers",
        "description": "w84u.serializers",
        "peekOfCode": "class SessionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Session\n        fields = '__all__'\nclass MaybeMatchSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = MaybeMatch\n        fields = '__all__'\nclass MatchSerializer(serializers.ModelSerializer):\n    user_1 = CustomUserSerializer(read_only=True)",
        "detail": "w84u.serializers",
        "documentation": {}
    },
    {
        "label": "MaybeMatchSerializer",
        "kind": 6,
        "importPath": "w84u.serializers",
        "description": "w84u.serializers",
        "peekOfCode": "class MaybeMatchSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = MaybeMatch\n        fields = '__all__'\nclass MatchSerializer(serializers.ModelSerializer):\n    user_1 = CustomUserSerializer(read_only=True)\n    user_2 = CustomUserSerializer(read_only=True)\n    session_1 = SessionSerializer(read_only=True)\n    session_2 = SessionSerializer(read_only=True)\n    class Meta:",
        "detail": "w84u.serializers",
        "documentation": {}
    },
    {
        "label": "MatchSerializer",
        "kind": 6,
        "importPath": "w84u.serializers",
        "description": "w84u.serializers",
        "peekOfCode": "class MatchSerializer(serializers.ModelSerializer):\n    user_1 = CustomUserSerializer(read_only=True)\n    user_2 = CustomUserSerializer(read_only=True)\n    session_1 = SessionSerializer(read_only=True)\n    session_2 = SessionSerializer(read_only=True)\n    class Meta:\n        model = Match\n        fields = \"__all__\"",
        "detail": "w84u.serializers",
        "documentation": {}
    },
    {
        "label": "handle_session_save",
        "kind": 2,
        "importPath": "w84u.services",
        "description": "w84u.services",
        "peekOfCode": "def handle_session_save(sender, instance, created, **kwargs):\n    if created:\n        find_possible_matches(instance)\ndef find_possible_matches(session):\n        try:\n            exclude_session = session\n            print(exclude_session)\n            # exclude_session = Session.objects.filter(user=pk).latest('created_at')\n            blue_marker = exclude_session.blue_marker\n            red_marker = exclude_session.red_marker",
        "detail": "w84u.services",
        "documentation": {}
    },
    {
        "label": "find_possible_matches",
        "kind": 2,
        "importPath": "w84u.services",
        "description": "w84u.services",
        "peekOfCode": "def find_possible_matches(session):\n        try:\n            exclude_session = session\n            print(exclude_session)\n            # exclude_session = Session.objects.filter(user=pk).latest('created_at')\n            blue_marker = exclude_session.blue_marker\n            red_marker = exclude_session.red_marker\n            exclude_session_name = exclude_session.name\n            exclude_session_surname = exclude_session.surname\n            print(exclude_session_name)",
        "detail": "w84u.services",
        "documentation": {}
    },
    {
        "label": "combine_date_time",
        "kind": 2,
        "importPath": "w84u.timeCompare",
        "description": "w84u.timeCompare",
        "peekOfCode": "def combine_date_time(date_str, time_str):\n    if date_str and time_str:\n        date_part = parser.isoparse(date_str)\n        time_part = parser.isoparse(time_str)\n        return datetime.combine(date_part, time_part.time())\n    return None\ndef create_datetime_range(date_range_begin, date_range_end, time_range_begin, time_range_end):\n    start = combine_date_time(date_range_begin, time_range_begin)\n    end = combine_date_time(date_range_end, time_range_end)\n    print(\"Start datetime:\", start)",
        "detail": "w84u.timeCompare",
        "documentation": {}
    },
    {
        "label": "create_datetime_range",
        "kind": 2,
        "importPath": "w84u.timeCompare",
        "description": "w84u.timeCompare",
        "peekOfCode": "def create_datetime_range(date_range_begin, date_range_end, time_range_begin, time_range_end):\n    start = combine_date_time(date_range_begin, time_range_begin)\n    end = combine_date_time(date_range_end, time_range_end)\n    print(\"Start datetime:\", start)\n    print(\"End datetime:\", end)\n    if start and end:\n        return DateTimeTZRange(start, end)\n    return None",
        "detail": "w84u.timeCompare",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "w84u.urls",
        "description": "w84u.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register(r'users', views.CustomUserViewSet, basename='users')\nrouter.register(r'marker', views.MarkerViewSet, basename='marker')\nrouter.register(r'markerhistory', views.MarkerHistoryViewSet, basename='markerhistory')\nrouter.register(r'maybematch', views.MaybeMatchViewSet, basename='maybematch')\nrouter.register(r'match', views.MatchViewSet, basename='match')\nrouter.register(r'message', views.MessageViewSet, basename='message')\nrouter.register(r'session', views.SessionViewSet, basename='session')\nrouter.register(r'optionalinfo', views.OptionalInfoViewSet, basename='optionalinfo')\nurlpatterns = [",
        "detail": "w84u.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "w84u.urls",
        "description": "w84u.urls",
        "peekOfCode": "urlpatterns = [\n                  path('api/v1/maybematch', views.MaybeMatchAPIView.as_view(), name='maybematch'),\n                  path('api/v1/match/', views.MatchView.as_view(), name='match'),\n                  path('', views.main, name='all'),\n                  path('register/', views.register, name='registration'),\n                  path('login/', views.user_login, name='login'),\n                  path('logout/', views.logout_user, name='logout'),\n                  path('map/', views.map_view, name='map'),\n                  path('api/v1/save_locations/', views.SaveLocationsView.as_view(), name='save_locations'),\n                  path('api/v1/save_info/', views.Save_infoView.as_view(), name='save_info'),",
        "detail": "w84u.urls",
        "documentation": {}
    },
    {
        "label": "LoginAPIView",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class LoginAPIView(APIView):\n    def post(self, request, *args, **kwargs):\n        email = request.data.get('email')\n        password = request.data.get('password')\n        try:\n            user = CustomUser.objects.get(email=email)\n        except CustomUser.DoesNotExist:\n            return Response({'error': 'Invalid credentials'}, status=400)\n        user = authenticate(username=user.username, password=password)\n        if user:",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "LogoutAPIView",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class LogoutAPIView(APIView):\n    permission_classes = (IsAuthenticated,)\n    def post(self, request):\n        try:\n            refresh_token = request.data[\"refresh_token\"]\n            token = RefreshToken(refresh_token)\n            token.blacklist()  # Добавляет токен в черный список\n            return Response({'detail': 'Successfully logged out'}, status=205)\n        except Exception as e:\n            return Response({'detail': str(e)}, status=400)",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "Save_infoView",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class Save_infoView(APIView):\n    parser_classes = (MultiPartParser, FormParser)\n    def post(self, request):\n        try:\n            # Извлечение токена из заголовка запроса\n            auth_header = request.headers.get('Authorization')\n            if auth_header:\n                token_key = auth_header.split(' ')[1]  # Предполагаем формат 'Token <token>'\n                try:\n                    token = Token.objects.get(key=token_key)",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "SaveLocationsView",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class SaveLocationsView(APIView):\n    def post(self, request):\n        try:\n            data = request.data\n            red_location = data.get('myLocation')\n            blue_location = data.get('targetLocation')\n            user = request.user\n            if not user.is_authenticated:\n                return Response({\"error\": \"User not authenticated\"}, status=status.HTTP_401_UNAUTHORIZED)\n            response_data = {}",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "WorldView",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class WorldView(APIView): #мусор ебаный\n    def get(self, request):\n        # Здесь можете добавить логику получения данных, которые будут возвращены\n        data = {\n            \"message\": \"Hello from Django\"\n        }\n        return Response(data, status=status.HTTP_200_OK)\nclass AccountView(APIView):  # класс загрузки данных из таблицы CustomUser\n    permission_classes = [IsAuthenticated]\n    def get(self, request):",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "AccountView",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class AccountView(APIView):  # класс загрузки данных из таблицы CustomUser\n    permission_classes = [IsAuthenticated]\n    def get(self, request):\n        try:\n            info = request.user\n        except CustomUser.DoesNotExist:\n            return Response({\"detail\": \"Информация не найдена\"}, status=status.HTTP_404_NOT_FOUND)\n        serializer = CustomUserSerializer(info)\n        return Response(serializer.data, status=status.HTTP_200_OK)\nclass OptionalInfoView(APIView):",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "OptionalInfoView",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class OptionalInfoView(APIView):\n    permission_classes = [IsAuthenticated]\n    def get(self, request):\n        try:\n            optional_info = OptionalInfo.objects.get(user=request.user)\n        except OptionalInfo.DoesNotExist:\n            # Создаем запись, если не найдена\n            optional_info = OptionalInfo.objects.create(user=request.user)\n        serializer = OptionalInfoSerializer(optional_info)\n        return Response(serializer.data, status=status.HTTP_200_OK)",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "TimeCompare",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class TimeCompare(View):\n    def get(self, request, pk):\n        try:\n            # Получаем последнюю сессию пользователя\n            exclude_session = Session.objects.filter(user=pk).latest('created_at')\n            print(exclude_session.date)\n            print(exclude_session.datetime_range)\n        except Session.DoesNotExist:\n            return HttpResponse('Сессия не найдена', status=404)\n        filtered = Session.objects.none()",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "GeoCompare",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class GeoCompare(View):\n    def get(self, request, pk):\n        try:\n            exclude_session = Session.objects.filter(user=pk).latest('created_at')\n            blue_marker = exclude_session.blue_marker\n            red_marker = exclude_session.red_marker\n        except Session.DoesNotExist:\n            return HttpResponse('Сессия не найдена', status=404)\n        if blue_marker and red_marker:\n            radius_km = 0.05  # 50 метров",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "MaybeMatchAPIView",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class MaybeMatchAPIView(APIView):\n    permission_classes = [IsAuthenticated]\n    def get(self, request):\n        params = MaybeMatch.objects.filter(\n            (Q(id_confirmed_by_user1=False) & Q(user_1=request.user)) |\n            (Q(id_confirmed_by_user2=False) & Q(user_2=request.user))\n        )\n        count = params.count()\n        if count > 0:\n            matches_data = []",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "MatchView",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class MatchView(APIView):\n    def get(self, request):\n        maybematches = MaybeMatch.objects.filter(\n            (Q(user_1=request.user) | Q(user_2=request.user)) &\n            Q(id_confirmed_by_user1=True) &\n            Q(id_confirmed_by_user2=True)\n        )\n        if maybematches.exists():\n            for i in maybematches:\n                # Проверяем, существует ли уже такой матч",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "CustomUserViewSet",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class CustomUserViewSet(viewsets.ModelViewSet):\n    queryset = CustomUser.objects.all()\n    serializer_class = CustomUserSerializer\n    # permission_classes = [IsAdminUser, ]\n    filter_backends = [DjangoFilterBackend]\n    filterset_fields = ['email']\nclass OptionalInfoViewSet(viewsets.ModelViewSet):\n    queryset = OptionalInfo.objects.all()\n    serializer_class = OptionalInfoSerializer\n    # permission_classes = [IsAdminUser, ]",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "OptionalInfoViewSet",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class OptionalInfoViewSet(viewsets.ModelViewSet):\n    queryset = OptionalInfo.objects.all()\n    serializer_class = OptionalInfoSerializer\n    # permission_classes = [IsAdminUser, ]\nclass MarkerViewSet(viewsets.ModelViewSet):\n    queryset = Marker.objects.all()\n    serializer_class = MarkerSerializer\n    # permission_classes = [IsAdminUser, ]\nclass MarkerHistoryViewSet(viewsets.ModelViewSet):\n    queryset = MarkerHistory.objects.all()",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "MarkerViewSet",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class MarkerViewSet(viewsets.ModelViewSet):\n    queryset = Marker.objects.all()\n    serializer_class = MarkerSerializer\n    # permission_classes = [IsAdminUser, ]\nclass MarkerHistoryViewSet(viewsets.ModelViewSet):\n    queryset = MarkerHistory.objects.all()\n    serializer_class = MarkerHistorySerializer\n    # permission_classes = [IsAdminUser, ]\nclass MaybeMatchViewSet(viewsets.ModelViewSet):\n    queryset = MaybeMatch.objects.all()",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "MarkerHistoryViewSet",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class MarkerHistoryViewSet(viewsets.ModelViewSet):\n    queryset = MarkerHistory.objects.all()\n    serializer_class = MarkerHistorySerializer\n    # permission_classes = [IsAdminUser, ]\nclass MaybeMatchViewSet(viewsets.ModelViewSet):\n    queryset = MaybeMatch.objects.all()\n    serializer_class = MaybeMatchSerializer\nclass MatchViewSet(viewsets.ModelViewSet):\n    queryset = Match.objects.all()\n    serializer_class = MatchSerializer",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "MaybeMatchViewSet",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class MaybeMatchViewSet(viewsets.ModelViewSet):\n    queryset = MaybeMatch.objects.all()\n    serializer_class = MaybeMatchSerializer\nclass MatchViewSet(viewsets.ModelViewSet):\n    queryset = Match.objects.all()\n    serializer_class = MatchSerializer\n#     # permission_classes = [IsAdminUser, ]\nclass MessageViewSet(viewsets.ModelViewSet):\n    queryset = Message.objects.all()\n    serializer_class = MessageSerializer",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "MatchViewSet",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class MatchViewSet(viewsets.ModelViewSet):\n    queryset = Match.objects.all()\n    serializer_class = MatchSerializer\n#     # permission_classes = [IsAdminUser, ]\nclass MessageViewSet(viewsets.ModelViewSet):\n    queryset = Message.objects.all()\n    serializer_class = MessageSerializer\n    # permission_classes = [IsAdminUser, ]\nclass SessionViewSet(viewsets.ModelViewSet):\n    queryset = Session.objects.all()",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "MessageViewSet",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class MessageViewSet(viewsets.ModelViewSet):\n    queryset = Message.objects.all()\n    serializer_class = MessageSerializer\n    # permission_classes = [IsAdminUser, ]\nclass SessionViewSet(viewsets.ModelViewSet):\n    queryset = Session.objects.all()\n    serializer_class = SessionSerializer\n#     permission_classes = [IsAdminUser, ]",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "SessionViewSet",
        "kind": 6,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "class SessionViewSet(viewsets.ModelViewSet):\n    queryset = Session.objects.all()\n    serializer_class = SessionSerializer\n#     permission_classes = [IsAdminUser, ]",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "def main(request):\n    context = {}\n    return render(request, 'w84u/main.html', context)\ndef register(request):\n    if request.method == 'POST':\n        user_form = UserRegistrationForm(request.POST)\n        if user_form.is_valid():\n            new_user = user_form.save(commit=False)\n            new_user.set_password(user_form.cleaned_data['password'])\n            new_user.username = new_user.email",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 2,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "def register(request):\n    if request.method == 'POST':\n        user_form = UserRegistrationForm(request.POST)\n        if user_form.is_valid():\n            new_user = user_form.save(commit=False)\n            new_user.set_password(user_form.cleaned_data['password'])\n            new_user.username = new_user.email\n            new_user.save()\n            return redirect('/login/')\n    else:",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "get_user_token",
        "kind": 2,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "def get_user_token(user):\n    token, created = Token.objects.get_or_create(user=user)\n    return token.key\ndef user_login(request):\n    if request.method == 'POST':\n        form = LoginForm(request.POST)\n        if form.is_valid():\n            email = form.cleaned_data['email']\n            password = form.cleaned_data['password']\n            user = CustomUser.objects.filter(email=email).first()",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "user_login",
        "kind": 2,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "def user_login(request):\n    if request.method == 'POST':\n        form = LoginForm(request.POST)\n        if form.is_valid():\n            email = form.cleaned_data['email']\n            password = form.cleaned_data['password']\n            user = CustomUser.objects.filter(email=email).first()\n            if user:\n                user = authenticate(request, username=user.username, password=password)\n                if user is not None:",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "logout_user",
        "kind": 2,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "def logout_user(request):\n    logout(request)\n    return redirect('/')\ndef map_view(request):\n    return render(request, 'w84u/W4U.html', {})\nclass Save_infoView(APIView):\n    parser_classes = (MultiPartParser, FormParser)\n    def post(self, request):\n        try:\n            # Извлечение токена из заголовка запроса",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "map_view",
        "kind": 2,
        "importPath": "w84u.views",
        "description": "w84u.views",
        "peekOfCode": "def map_view(request):\n    return render(request, 'w84u/W4U.html', {})\nclass Save_infoView(APIView):\n    parser_classes = (MultiPartParser, FormParser)\n    def post(self, request):\n        try:\n            # Извлечение токена из заголовка запроса\n            auth_header = request.headers.get('Authorization')\n            if auth_header:\n                token_key = auth_header.split(' ')[1]  # Предполагаем формат 'Token <token>'",
        "detail": "w84u.views",
        "documentation": {}
    },
    {
        "label": "Base",
        "kind": 6,
        "importPath": "database",
        "description": "database",
        "peekOfCode": "class Base:\n    __allow_unmapped__ = True\nmetadata = MetaData(naming_convention=naming_convention)\nBase = declarative_base(metadata=metadata, cls=Base)\nclass User(Base):\n    __tablename__='users'\n    id = Column(Integer, primary_key=True)\n    username = Column(String, unique=True)\n    email = Column(String,unique=True)\n    real_name = Column(String)",
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "database",
        "description": "database",
        "peekOfCode": "class User(Base):\n    __tablename__='users'\n    id = Column(Integer, primary_key=True)\n    username = Column(String, unique=True)\n    email = Column(String,unique=True)\n    real_name = Column(String)\n    age = Column(Integer)\n    gender = Column(Enum('men', 'women', name='gender'))\n    created_at:datetime = Column(DateTime)\nclass Marker(Base):",
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "Marker",
        "kind": 6,
        "importPath": "database",
        "description": "database",
        "peekOfCode": "class Marker(Base):\n    __tablename__ = 'marker'\n    id = Column(Integer, primary_key=True)\n    user = Column(Integer , ForeignKey('users.id'))\n    latitude = Column(Float)\n    longitude = Column(Float)\n    type = Column(Enum('red', 'blue', name='type'))\n    created_at: datetime = Column(DateTime)\nclass MarkerHistory(Base):\n    __tablename__ = 'markerhistory'",
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "MarkerHistory",
        "kind": 6,
        "importPath": "database",
        "description": "database",
        "peekOfCode": "class MarkerHistory(Base):\n    __tablename__ = 'markerhistory'\n    id = Column(Integer, primary_key=True)\n    user = Column(Integer, ForeignKey('users.id'))\n    marker = Column(Integer,ForeignKey('marker.id'))\n    match = Column(Integer,ForeignKey('match.id'))\n    latitude = Column(Float)\n    longitude = Column(Float)\n    requested_at = Column(DateTime)\nclass Match(Base):",
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "Match",
        "kind": 6,
        "importPath": "database",
        "description": "database",
        "peekOfCode": "class Match(Base):\n    __tablename__ = 'match'\n    id = Column(Integer, primary_key=True)\n    user_1 = Column(Integer, ForeignKey('users.id'))\n    user_2 = Column(Integer,ForeignKey('users.id'))\n    created_at: datetime = Column(DateTime)\nclass Message(Base):\n    __tablename__ = 'messsage'\n    id = Column(Integer, primary_key=True)\n    match = Column(Integer,ForeignKey('match.id'))",
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "Message",
        "kind": 6,
        "importPath": "database",
        "description": "database",
        "peekOfCode": "class Message(Base):\n    __tablename__ = 'messsage'\n    id = Column(Integer, primary_key=True)\n    match = Column(Integer,ForeignKey('match.id'))\n    sender = Column(Integer,ForeignKey('users.id'))\n    content = Column(String)\n    timestamp = Column(DateTime)\n    read = Column(Integer, default=0)",
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "database_path",
        "kind": 5,
        "importPath": "database",
        "description": "database",
        "peekOfCode": "database_path = 'postgresql+psycopg2://postgres:12385279@89.23.97.213:5432/w4udatabase'\nfrom sqlalchemy import create_engine, Float, BigInteger\nfrom sqlalchemy import create_engine, MetaData, Table, Integer, String, Enum,Column, DateTime, ForeignKey, Numeric\nfrom sqlalchemy.orm import declarative_base, relationship, sessionmaker, Mapped\nfrom datetime import datetime, timedelta\nengine = create_engine(database_path, pool_pre_ping=True)\nengine.connect()\nSession = sessionmaker(engine)\nSession.configure(bind=engine)\nnaming_convention = {",
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "engine",
        "kind": 5,
        "importPath": "database",
        "description": "database",
        "peekOfCode": "engine = create_engine(database_path, pool_pre_ping=True)\nengine.connect()\nSession = sessionmaker(engine)\nSession.configure(bind=engine)\nnaming_convention = {\n    \"ix\": 'ix_%(column_0_label)s',\n    \"uq\": \"uq_%(table_name)s_%(column_0_name)s\",\n    \"ck\": \"ck_%(table_name)s_%(constraint_name)s\",\n    \"fk\": \"fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s\",\n    \"pk\": \"pk_%(table_name)s\"",
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "Session",
        "kind": 5,
        "importPath": "database",
        "description": "database",
        "peekOfCode": "Session = sessionmaker(engine)\nSession.configure(bind=engine)\nnaming_convention = {\n    \"ix\": 'ix_%(column_0_label)s',\n    \"uq\": \"uq_%(table_name)s_%(column_0_name)s\",\n    \"ck\": \"ck_%(table_name)s_%(constraint_name)s\",\n    \"fk\": \"fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s\",\n    \"pk\": \"pk_%(table_name)s\"\n}\nclass Base:",
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "naming_convention",
        "kind": 5,
        "importPath": "database",
        "description": "database",
        "peekOfCode": "naming_convention = {\n    \"ix\": 'ix_%(column_0_label)s',\n    \"uq\": \"uq_%(table_name)s_%(column_0_name)s\",\n    \"ck\": \"ck_%(table_name)s_%(constraint_name)s\",\n    \"fk\": \"fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s\",\n    \"pk\": \"pk_%(table_name)s\"\n}\nclass Base:\n    __allow_unmapped__ = True\nmetadata = MetaData(naming_convention=naming_convention)",
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "metadata",
        "kind": 5,
        "importPath": "database",
        "description": "database",
        "peekOfCode": "metadata = MetaData(naming_convention=naming_convention)\nBase = declarative_base(metadata=metadata, cls=Base)\nclass User(Base):\n    __tablename__='users'\n    id = Column(Integer, primary_key=True)\n    username = Column(String, unique=True)\n    email = Column(String,unique=True)\n    real_name = Column(String)\n    age = Column(Integer)\n    gender = Column(Enum('men', 'women', name='gender'))",
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "Base",
        "kind": 5,
        "importPath": "database",
        "description": "database",
        "peekOfCode": "Base = declarative_base(metadata=metadata, cls=Base)\nclass User(Base):\n    __tablename__='users'\n    id = Column(Integer, primary_key=True)\n    username = Column(String, unique=True)\n    email = Column(String,unique=True)\n    real_name = Column(String)\n    age = Column(Integer)\n    gender = Column(Enum('men', 'women', name='gender'))\n    created_at:datetime = Column(DateTime)",
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Waiting_for_u.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]